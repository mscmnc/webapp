{"version":3,"sources":["store/actions/search.js","store/actions/actionTypes.js","components/Input/Input.js","components/Button/Button/Button.js","components/Search/Search.js","store/actions/queries.js","components/ImageGrid/Img/Img.js","components/ImageGrid/NoImg/NoImg.js","components/Spinner/Spinner.js","components/ImageGrid/ImageGrid.js","components/Button/RemoveButton/RemoveButton.js","components/Queries/LiItems/LiItems.js","components/Queries/Queries.js","container/WebApp/WebApp.js","App.js","serviceWorker.js","store/reducer/reducer.js","index.js"],"names":["API_KEY","concat","process","searchSuccess","data","type","loading","searchFail","error","getResultsBySearch","query","dispatch","axios","method","url","params","per_page","orientation","then","response","console","log","results","catch","input","props","react_default","a","createElement","placeholder","id","onChange","changed","value","button","onClick","disabled","title","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","search","event","preventDefault","onInitGetResultsBySearch","state","setState","saveQuery","onSaveQuery","searchChange","bind","assertThisInitialized","target","emptyValue","className","Input","Button","Component","connect","searchActions","savedQuery","Img","src","alt","href","user","rel","name","link","noImg","spinner","ImageGrid","images","Spinner_Spinner","length","map","img","ImageGrid_Img_Img","key","urls","small","links","html","NoImg","removeButton","version","xmlns","width","height","viewBox","d","fill","LiItems","onSearchByQuery","RemoveButton","onDeleteQuery","delId","actions","Queries","savedQueries","queries","Queries_LiItems_LiItems","WebApp","onInitGetRandom","components_Search_Search","components_ImageGrid_ImageGrid","components_Queries_Queries","count","onInitGetResultsbySearch","App","container_WebApp_WebApp","Boolean","window","location","hostname","match","initialState","reducer","arguments","undefined","action","objectSpread","shortId","generate","updatedQueries","filter","result","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.824507da.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes'; \r\nimport axios from 'axios';\r\n\r\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`;\r\n\r\nexport const searchStart = () => {\r\n    return {\r\n        type: actionTypes.SEARCH_START\r\n    };\r\n};\r\n\r\nexport const searchSuccess = (data) => {\r\n    return {\r\n        type: actionTypes.SEARCH_SUCCESS,\r\n        data: data,\r\n        loading: false\r\n    };\r\n};\r\n\r\nexport const searchFail = (error) => {\r\n    return {\r\n        type: actionTypes.SEARCH_FAIL,\r\n        error: error,\r\n        loading: false\r\n    };\r\n};\r\n\r\nexport const getRandom = () => {\r\n    return dispatch => {\r\n        dispatch(searchStart());\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://api.unsplash.com/photos/random/?client_id='+API_KEY,\r\n            params: {'count': '12', orientation: 'landscape'}\r\n        }).then( response => {\r\n            dispatch(searchSuccess(response.data));\r\n        }).catch( error => {\r\n            dispatch(searchFail());\r\n        })\r\n\r\n    } \r\n}\r\n\r\nexport const getResultsBySearch = (query) => {\r\n    return dispatch => {\r\n        dispatch(searchStart());\r\n\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://api.unsplash.com/search/photos/?client_id='+API_KEY,\r\n            params: {'per_page': '12', orientation: 'landscape', query: query }\r\n        }).then( response => {\r\n            console.log('Lietuva');\r\n            dispatch(searchSuccess(response.data.results));\r\n        }).catch( error => {\r\n            dispatch(searchFail());\r\n        })\r\n\r\n    }\r\n}","export const SEARCH_START = \"SEARCH_START\";\r\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\r\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\r\n\r\nexport const SAVE_QUERY= \"SAVE_QUERY\";\r\nexport const DELETE_QUERY= \"DELETE_QUERY\";\r\n","import React from 'react';\r\n\r\nconst input = (props) => (    \r\n        <input type={props.type} placeholder={props.placeholder} id={props.id} onChange={props.changed} value={props.value}></input>\r\n)\r\n\r\nexport default input;","import React from 'react';\r\n\r\nconst button = (props) => (\r\n    <button type={props.type} onClick={props.onClick} disabled={props.disabled} >{props.title}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Input from '../Input/Input';\r\nimport Button from '../../components/Button/Button/Button'\r\nimport * as searchActions from '../../store/actions/index'\r\n\r\nclass Search extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: '',\r\n        };  \r\n        this.searchChange = this.searchChange.bind(this);       \r\n    } \r\n\r\n    searchChange(event) {\r\n        this.setState({search: event.target.value});\r\n        this.setState({ emptyValue: true })\r\n    }\r\n\r\n    search = (event) => {\r\n        event.preventDefault();      \r\n        this.props.onInitGetResultsBySearch(this.state.search);\r\n        this.setState({search: ''});\r\n    } \r\n\r\n    saveQuery = () => {\r\n        this.props.onSaveQuery(this.state.search);\r\n        this.setState({search: ''}); \r\n    } \r\n\r\n    render () {\r\n        return (\r\n            <form>\r\n            <div className=\"webapp-header--search\" >\r\n                <Input\r\n                type=\"text\"\r\n                placeholder=\"Search\" \r\n                id=\"SearchInput\"\r\n                value={this.state.search}\r\n                changed={this.searchChange}/>\r\n            </div>\r\n            <div className=\"webapp-header--buttons\">\r\n                <div className=\"buttons-search\">\r\n                    <Button title=\"Search\" type=\"submit\" disabled={!this.state.search} onClick={this.search}/>\r\n                </div> \r\n                <div className=\"buttons-save\">\r\n                    <Button title=\"Save\" type=\"button\" disabled={!this.state.search} onClick={this.saveQuery}/>      \r\n                </div> \r\n            </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onInitGetResultsBySearch: (query) => dispatch(searchActions.getResultsBySearch(query)),\r\n        onSaveQuery: (savedQuery) => dispatch(searchActions.savedQuery(savedQuery))\r\n    };\r\n  };\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);","import * as actionTypes from './actionTypes'; \r\n\r\nexport const savedQuery = (savedQuery) => {\r\n    return {\r\n        type: actionTypes.SAVE_QUERY,\r\n        savedQuery: savedQuery\r\n    };\r\n};\r\n\r\nexport const deleteQuery = (deleteId) => {\r\n    return {\r\n        type: actionTypes.DELETE_QUERY,\r\n        delId: deleteId\r\n    };\r\n};","import React from 'react';\r\n\r\nconst Img = (props) => (\r\n    <li className=\"webapp-bottom-imageGrid-img\" >\r\n        <img src={props.url} alt=\"Unsplash photos\"></img>\r\n        <a href={props.user} target=\"_blank\" rel=\"noopener noreferrer\">Photo by {props.name}</a><br></br>\r\n        <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">See it on Unsplash</a>\r\n    </li>\r\n)\r\n\r\nexport default Img;","import React from 'react';\r\n\r\nconst noImg = () => (\r\n    <div className=\"webapp-bottom-imageGrid--noImg\">\r\n        <h6>There are no photos by your keyword. Please try another</h6>  \r\n    </div>\r\n     \r\n)\r\n    \r\nexport default noImg;","import React from 'react';\r\nimport  './Spinner.css';\r\n\r\nconst spinner = () => (\r\n    <div className=\"lds-dual-ring\"></div>  \r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Img from '../../components/ImageGrid/Img/Img';\r\nimport NoImg from '../../components/ImageGrid/NoImg/NoImg';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nclass ImageGrid extends Component {\r\n\r\n    render () {\r\n        let images = <Spinner />;\r\n\r\n        if (!this.props.loading) { \r\n            if(this.props.data.length > 0) {\r\n                images = this.props.data.map(img => \r\n                    <Img key={img.id} \r\n                        url={img.urls.small} \r\n                        user={img.user.links.html} \r\n                        name={img.user.name}\r\n                        link={img.links.html}\r\n                />);\r\n            } else {\r\n                images = <NoImg/>\r\n            }                \r\n        }\r\n\r\n        return (\r\n            <ul className=\"webapp-bottom-imageGrid\">\r\n                {images}                 \r\n            </ul>\r\n        );\r\n    }\r\n   \r\n    \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.data,\r\n        loading: state.loading\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ImageGrid);","import React from 'react';\r\n\r\nconst removeButton = (props) => (\r\n    <svg onClick={props.onClick} className=\"removeButton\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"13\" height=\"13\" viewBox=\"0 0 32 32\">\r\n    <path d=\"M31.708 25.708c-0-0-0-0-0-0l-9.708-9.708 9.708-9.708c0-0 0-0 0-0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0-0 0-0 0l-9.708 9.708-9.708-9.708c-0-0-0-0-0-0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c-0 0-0 0-0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0-0 0-0 0-0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\" fill=\"#aaa\"></path>\r\n  </svg>\r\n)\r\n\r\nexport default removeButton;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions/index';\r\nimport RemoveButton from '../../Button/RemoveButton/RemoveButton';\r\n\r\nclass LiItems extends Component {\r\n\r\n    render () {\r\n        return (\r\n            <li onClick={() => this.props.onSearchByQuery(this.props.query)} key={this.props.key}>{this.props.query}<RemoveButton onClick={() => this.props.onDeleteQuery(this.props.delId)}/></li>\r\n        );\r\n    };\r\n\r\n   \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteQuery: (delId) => dispatch(actions.deleteQuery(delId)),\r\n        onSearchByQuery: (query) => dispatch(actions.getResultsBySearch(query))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(LiItems);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LiItems from './LiItems/LiItems';\r\n\r\nclass Queries extends Component {\r\n\r\n   render() {\r\n       return (\r\n        <div className=\"webapp-bottom-queries\">\r\n            <ul>\r\n                {this.props.savedQueries.map(queries => (\r\n                <LiItems key={queries.id} query={queries.query} delId={queries.id}/>))}           \r\n            </ul>\r\n        </div>\r\n       );\r\n   };\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        savedQueries: state.savedQuery\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Queries);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../assets/css/main.css';\r\nimport * as searchActions from '../../store/actions/index';\r\nimport Search from '../../components/Search/Search';\r\n\r\nimport ImageGrid from '../../components/ImageGrid/ImageGrid';\r\nimport Queries from '../../components/Queries/Queries';\r\n\r\n\r\nclass WebApp extends Component {\r\n\r\n  componentDidMount() {\r\n      this.props.onInitGetRandom();      \r\n  } \r\n  \r\n    render () {\r\n        return (\r\n          <div className=\"webapp\">\r\n            <div className=\"webapp-header\">\r\n                <Search/>           \r\n            </div>           \r\n            <div className=\"webapp-bottom\">\r\n                <ImageGrid />\r\n                <Queries/>\r\n            </div>\r\n          </div>\r\n        );\r\n    }   \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onInitGetRandom: () => dispatch(searchActions.getRandom()),\r\n      onInitGetResultsbySearch: (query) => dispatch(searchActions.getResultsBySearch(query))\r\n  };\r\n};\r\n\r\nexport default connect(null,mapDispatchToProps)(WebApp);","import React, { Component } from 'react';\nimport WebApp from './container/WebApp/WebApp';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <WebApp/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\r\nimport shortId from 'shortid';\r\n\r\nconst initialState = {\r\n    data: null,\r\n    query: null,\r\n    loading: true,\r\n    savedQuery: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SEARCH_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.SEARCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                loading: false\r\n            };\r\n        case actionTypes.SEARCH_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n        case actionTypes.SAVE_QUERY:\r\n        return {\r\n            ...state,\r\n            savedQuery: state.savedQuery.concat({id: shortId.generate() ,query: action.savedQuery})\r\n        };\r\n        case actionTypes.DELETE_QUERY:\r\n            const updatedQueries = state.savedQuery.filter( result => result.id !== action.delId ); \r\n            return {            \r\n                ...state,\r\n                savedQuery: updatedQueries\r\n            };\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store} >\n        <App/>\n    </Provider>    \n);\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}